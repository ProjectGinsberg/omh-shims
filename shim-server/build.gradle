buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    ext {
        springPlatformVersion = '1.0.3.RELEASE'
        springBootVersion = '1.1.9.RELEASE'
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot' // used for blessed dependencies and auto-configuration

jar {
    baseName = 'shim-server'
    version = '0.2.2'
}

springBoot {
    mainClass = "org.openmhealth.shim.Application"
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    javaVersion = 1.7
    healthVaultSdkVersion = '1.6'
    jacksonVersion = '2.4.4' // platform's still on 2.3.4
    signpostVersion = '1.2.1.2'
}

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
    // Spring IO (http://platform.spring.io/platform) gives us curated and harmonised dependencies, whose versions
    // you can find at http://docs.spring.io/platform/docs/${springPlatformVersion}/reference/htmlsingle/#appendix-dependency-versions
    versionManagement "io.spring.platform:platform-versions:${springPlatformVersion}@properties"

    compile "commons-io:commons-io"
    compile "org.apache.httpcomponents:httpclient"
    compile "org.apache.httpcomponents:httpcore"
    compile "com.microsoft.hsg:hv-jaxb:${healthVaultSdkVersion}"
    compile "com.microsoft.hsg:hv-sdk:${healthVaultSdkVersion}"
    compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jacksonVersion}"
    compile "joda-time:joda-time:2.4"
    compile "com.jayway.jsonpath:json-path:0.9.1"
    compile "com.github.fge:json-schema-validator:2.2.6"
    compile "oauth.signpost:signpost-commonshttp4:${signpostVersion}"
    compile "oauth.signpost:signpost-core:${signpostVersion}"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-starter-data-mongodb"
    compile "org.springframework.boot:spring-boot-starter-jetty"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.security.oauth:spring-security-oauth"
    compile "org.springframework.security.oauth:spring-security-oauth2"
    compile "org.codehaus.woodstox:woodstox-core-asl"

    testCompile "junit:junit"
    testCompile "org.mockito:mockito-core"
    testCompile "org.springframework.boot:spring-boot-starter-test"
}

task copyArchiveJarToDockerContext(dependsOn: build, type: Copy) {
    from 'build/libs'
    into '../docker/binary'
    include "${jar.archiveName}"
    rename { String fileName ->
        fileName.replace("${jar.archiveName}", "${jar.baseName}.jar")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}
